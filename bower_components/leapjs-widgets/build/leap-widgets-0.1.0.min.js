/*!                                                              
 * LeapJS Widgets v0.1.0                                          
 * http://github.com/leapmotion/leapjs-widgets/                                
 *                                                                             
 * Copyright 2013 LeapMotion, Inc. and other contributors                      
 * Released under the Apache-2.0 license                                       
 * http://github.com/leapmotion/leapjs-widgets/blob/master/LICENSE             
 */
(function(){"use strict";window.InteractablePlane=function(a,b,c){if(this.options=c||{},this.options.cornerInteractionRadius||(this.options.cornerInteractionRadius=20),void 0!==this.options.resize||(this.options.resize=!1),void 0!==this.options.moveX||(this.options.moveX=!0),void 0!==this.options.moveY||(this.options.moveY=!0),void 0!==this.options.moveZ||(this.options.moveZ=!1),void 0!==this.options.highlight||(this.options.highlight=!0),void 0!==this.options.damping||(this.options.damping=.12),void 0!==this.options.hoverBounds||(this.options.hoverBounds=[0,.32]),this.mesh=a,!(b instanceof Leap.Controller))throw"No Controller Given";b.plugins.proximity||b.use("proximity"),this.controller=b,this.lastPosition=null,this.interactable=!0,this.intersections={},this.touched=!1,this.movementConstraints={},this.fingersRequiredForMove=1,this.tempVec3=new THREE.Vector3,this.density=1,this.mass=this.mesh.geometry.area()*this.density,this.k=this.mass,this.isHovered=null,this.returnSpringK=null,this.force=new THREE.Vector3,this.springs=[],this.lastPosition=new THREE.Vector3,this.originalPosition=new THREE.Vector3,this.resetPosition(),this.previousOverlap={},this.options.resize&&this.bindResize(),(this.options.moveX||this.options.moveY)&&this.watchXYIntersection(),this.controller.on("frame",this.updatePosition.bind(this)),this.options.highlight&&this.bindHighlight(),this.controller.on("handLost",this.cleanupHandData.bind(this))},window.InteractablePlane.prototype={resetPosition:function(){this.lastPosition.copy(this.mesh.position),this.originalPosition.copy(this.mesh.position)},travel:function(a){return this.on("travel",a),this},highlight:function(a){return void 0===a?this.highlightMesh.visible:void(this.highlightMesh.visible=a)},bindHighlight:function(){this.highlightMesh=new THREE.Mesh(new THREE.PlaneGeometry(this.mesh.geometry.parameters.width+.005,this.mesh.geometry.parameters.height+.005),new THREE.MeshBasicMaterial({color:8508445})),this.mesh.add(this.highlightMesh),this.highlightMesh.position.set(0,0,-1e-4),this.highlightMesh.visible=!1,this.touch(function(){this.interactable&&this.highlight(!0)}.bind(this)),this.release(function(){this.highlight(!1)}.bind(this))},touch:function(a){return this.on("touch",a),this},release:function(a){return this.on("release",a),this},clearMovementConstraints:function(){this.movementConstraints={}},changeParent:function(a){var b;for(b in this.intersections)delete this.intersections[b];this.mesh.position.add(this.mesh.parent.position),this.lastPosition.copy(this.mesh.position),this.originalPosition.copy(this.mesh.position),this.mesh.parent.remove(this.mesh),a.add(this.mesh),console.assert(this.mesh.position)},getPosition:function(a){var b=a||new THREE.Vector3,c=0;for(var d in this.intersections)this.intersections.hasOwnProperty(d)&&(c++,b.add(this.moveProximity.intersectionPoints[d].clone().sub(this.intersections[d])));return c<this.fingersRequiredForMove?b.copy(this.mesh.position):b.divideScalar(c),b},addSpring:function(a,b){var c={position:a,k:b};return this.springs.push(c),c},removeSpring:function(a){for(var b=0;b<this.springs.length;b++)(this.springs[b]=a)&&this.springs.splice(b,1)},cleanupHandData:function(a){for(var b,c=this.interactiveJoints(a),d=0;d<c.length;d++)b=a.id+"-"+d,delete this.intersections[b],delete this.previousOverlap[b]},testZForce:function(){var a=-.01;this.mesh.pointOverlap=function(){return new THREE.Vector3(0,0,a)},this.interactiveJoints=function(){return[[0,0,0]]},this.previousOverlap["undefined-0"]=-1*a;var b=(this.returnSpringK*this.originalPosition.z+a*this.k)/(this.returnSpringK+this.k),c=new THREE.Vector3;this.getZPosition([{}],c),console.assert(c.z===b)},getPushthrough:function(a,b){for(var c,d,e,f,g=0,h=0,i=1/0,j=(new THREE.Matrix4).getInverse(this.mesh.matrixWorld),k=0;k<a.length;k++){c=a[k];for(var l=this.interactiveJoints(c),m=0;m<l.length;m++)d=c.id+"-"+m,f=this.mesh.pointOverlap((new THREE.Vector3).fromArray(l[m]),j),e=f&&f.z,b&&(e+=b),e&&this.previousOverlap[d]&&e*this.previousOverlap[d]<0&&(i>e&&(i=e),g+=e,h++),(!e||!this.previousOverlap[d]||e*this.previousOverlap[d]>0)&&(this.previousOverlap[d]=e)}return{sum:g,count:h,min:i}},getZPosition:function(a,b){var c=this.getPushthrough(a,this.mesh.position.z-this.originalPosition.z);c.count>0&&(b.z=c.min+this.originalPosition.z)},calcZForce:function(a){var b=this.getPushthrough(a);if(this.force.z+=this.k*b.sum,this.returnSpringK){var c=this.mesh.position.clone().sub(this.originalPosition);this.force.add(c.multiplyScalar(-this.returnSpringK))}for(var d,c,e=0;e<this.springs.length;e++)d=this.springs[e],c=this.mesh.position.clone().sub(d.position),this.force.add(c.multiplyScalar(-d.k))},stepPhysics:function(a){a.subVectors(this.mesh.position,this.lastPosition),a.add(this.force.divideScalar(this.mass)),this.force.set(0,0,0),a.multiplyScalar(1-this.options.damping),a.add(this.mesh.position)},watchXYIntersection:function(){var a=[0,1,2,3,0,1,2,3,0,1,2,3,0,1,2,3,0,1,2,3],b=function(b,c,d){var e=b.fingers[Math.floor(c/4)].data("boneMeshes");e&&e[a[c]].material.color.setHex(d)},c=this.moveProximity=this.controller.watch(this.mesh,this.interactiveEndBones);c.in(function(a,c,d,e){a.data("resizing")||(b(a,e,16777215),this.intersections[d]=c.clone().sub(this.mesh.position),this.touched||(this.touched=!0,this.emit("touch",this)))}.bind(this)),c.out(function(a,d,e,f){b(a,f,16777215);for(var g in this.intersections)if(g===e){delete this.intersections[g];break}0==c.intersectionCount()&&this.touched&&(this.touched=!1,this.emit("release",this))}.bind(this))},updatePosition:function(a){if(!this.interactable)return!1;this.tempVec3.set(0,0,0);var b=!1,c=!1,d=!1,e=this.tempVec3;this.force.set(0,0,0),this.options.moveX||this.options.moveY?this.getPosition(e):e.copy(this.mesh.position),this.options.moveZ&&this.returnSpringK&&this.getZPosition(a.hands,e),e.equals(this.mesh.position)&&(this.options.moveZ&&this.calcZForce(a.hands),this.stepPhysics(e)),this.lastPosition.copy(this.mesh.position),this.options.moveX&&(this.movementConstraints.x&&(e.x=this.movementConstraints.x(e.x)),e.x!=this.mesh.position.x&&(this.mesh.position.x=e.x,b=!0)),this.options.moveY&&(this.movementConstraints.y&&(e.y=this.movementConstraints.y(e.y)),e.y!=this.mesh.position.y&&(this.mesh.position.y=e.y,c=!0)),this.options.moveZ&&(this.movementConstraints.z&&(e.z=this.movementConstraints.z(e.z)),e.z!=this.mesh.position.z&&(this.mesh.position.z=e.z,d=!0)),(b||c||d)&&this.emit("travel",this,this.mesh),this.options.hoverBounds&&this.emitHoverEvents()},emitHoverEvents:function(){var a,b;for(var c in this.previousOverlap)if(a=this.previousOverlap[c],a>this.options.hoverBounds[0]&&a<this.options.hoverBounds[1]){b=!0;break}b&&!this.isHovered&&(this.isHovered=b,this.emit("hover",this.mesh)),!b&&this.isHovered&&(this.isHovered=b,this.emit("hoverOut",this.mesh))},hover:function(a,b){this.on("hover",a),b&&this.on("hoverOut",b)},bindResize:function(){var a=this.mesh.geometry.corners();this.cornerMeshes=[],this.cornerProximities=[];for(var b,c,d=0;d<a.length;d++){this.cornerMeshes[d]=b=new THREE.Mesh(new THREE.SphereGeometry(this.options.cornerInteractionRadius,32,32),new THREE.MeshPhongMaterial({color:16777215})),b.visible=!1,b.name="corner-"+d;var e=a[d];b.position.set(e.x,e.y,0),this.mesh.add(b),this.cornerProximities[d]=c=this.controller.watch(b,this.cursorPoints).in(function(){this.mesh.material.color.setHex(3403298)}).out(function(){this.mesh.material.color.setHex(16777215)})}this.controller.on("hand",this.checkResizeProximity.bind(this)),this.controller.on("pinch",function(a){for(var b,c=a.id+"-0",d=0;d<this.cornerProximities.length;d++)if("in"===this.cornerProximities[d].states[c]){b=this.cornerProximities[d];break}b&&(a.data("resizing")||a.data("resizing",b))}.bind(this)),this.controller.on("unpinch",function(a){a.data("resizing")&&a.data("resizing",!1)}.bind(this))},interactiveEndBones:function(a){for(var b,c=[],d=0;5>d;d++)b=a.fingers[d],d>0&&c.push([(new THREE.Vector3).fromArray(b.proximal.nextJoint),(new THREE.Vector3).fromArray(b.proximal.prevJoint)]),c.push([(new THREE.Vector3).fromArray(b.medial.nextJoint),(new THREE.Vector3).fromArray(b.medial.prevJoint)],[(new THREE.Vector3).fromArray(b.distal.nextJoint),(new THREE.Vector3).fromArray(b.distal.prevJoint)]);return c},interactiveJoints:function(a){for(var b,c=[],d=0;5>d;d++){b=a.fingers[d],d>0&&c.push(b.mcpPosition);var e=b.distal.nextJoint,f=[0,0,.02];Leap.vec3.transformMat3(f,f,b.distal.matrix()),Leap.vec3.add(f,e,f),c.push(b.pipPosition,b.dipPosition,f)}return c},intersectionCount:function(){var a=0;for(var b in this.intersections)a++;return a},safeSetInteractable:function(a){if(!a)return void(this.interactable=!1);if(this.touched){var b=function(){this.interactable=!0,this.removeListener("release",b)}.bind(this);this.release(b)}else this.interactable=!0},cursorPoints:function(a){return[(new THREE.Vector3).fromArray(a.palmPosition)]},checkResizeProximity:function(a){var b,c=a.data("resizing");if(c)for(var d=this.cursorPoints(a)[0],e=0;e<this.cornerProximities.length;e++)if(c===this.cornerProximities[e])if(a.data("pinchEvent.pinching")){this.mesh.setCorner(e,d),b=new THREE.Vector3(1,1,1).divide(this.mesh.scale);for(var f=0;f<this.cornerProximities.length;f++)this.cornerMeshes[f].scale.copy(b)}else a.data("resizing",!1)}},Leap._.extend(InteractablePlane.prototype,Leap.EventEmitter.prototype)}).call(this);var PushButton=function(a,b){"use strict";this.plane=a,this.plane.returnSpringK=this.plane.mass/25,this.plane.options.moveX=!1,this.plane.options.moveY=!1,this.plane.options.moveZ=!0,this.options=b||(b={}),void 0!==this.options.locking||(this.options.locking=!0),void 0!==this.options.longThrow||(this.options.longThrow=-.05),void 0!==this.options.shortThrow||(this.options.shortThrow=-.03),this.pressed=!1,this.canChangeState=!0,this.plane.movementConstraints.z=this.releasedConstraint.bind(this),this.options.locking&&this.bindLocking()};PushButton.prototype.bindLocking=function(){this.on("press",function(){this.pressed=!0,this.plane.movementConstraints.z=this.pressedConstraint.bind(this)}.bind(this)),this.on("release",function(){this.pressed=!1,this.plane.movementConstraints.z=this.releasedConstraint.bind(this)}.bind(this))},PushButton.prototype.releasedConstraint=function(a){var b=this.plane.originalPosition.z;return a>b?(this.canChangeState=!0,b):a<b+this.options.longThrow?(!this.pressed&&this.canChangeState&&(this.canChangeState=!1,this.emit("press",this.plane.mesh)),b+this.options.longThrow):a},PushButton.prototype.pressedConstraint=function(a){var b=this.plane.originalPosition.z;return a>b+this.options.shortThrow?(this.canRelease=!0,b+this.options.shortThrow):a<b+this.options.longThrow?(this.pressed&&this.canRelease&&(this.canRelease=!1,this.emit("release",this.plane.mesh)),b+this.options.longThrow):a},Leap._.extend(PushButton.prototype,Leap.EventEmitter.prototype),Leap.plugin("proximity",function(){"use strict";var a=[],b=function(a){return a instanceof THREE.Vector3?a:(new THREE.Vector3).fromArray(a)},c=function(a,b,c,d){var e=(new THREE.Vector3).subVectors(b,a),f=(new THREE.Vector3).subVectors(d,c),g=e.x*f.y-e.y*f.x;console.assert(!isNaN(e.x)),console.assert(!isNaN(e.y)),console.assert(!isNaN(e.z)),console.assert(!isNaN(f.x)),console.assert(!isNaN(f.y)),console.assert(!isNaN(f.z));var h=c.clone().sub(a),i=h.x*f.y-h.y*f.x,j=h.x*e.y-h.y*e.x,k=i/g,l=j/g;return isNaN(k)?!1:isNaN(l)?!1:0>k||k>1?!1:0>l||l>1?!1:a.clone().add(e.multiplyScalar(k))},d=function(){var a;a=c(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(.5,-1,0),new THREE.Vector3(.5,1,0)),console.assert(a),console.assert(a.equals(new THREE.Vector3(.5,0,0))),a=c(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(0,.2,0),new THREE.Vector3(1,.4,0)),console.assert(a===!1),a=c(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(0,.2,0),new THREE.Vector3(1,.4,.4)),console.assert(a===!1),a=c(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(1.5,-1,0),new THREE.Vector3(1.5,1,0)),console.assert(a===!1),a=c(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(.5,-2,0),new THREE.Vector3(.5,-1,0)),console.assert(a===!1)},e=function(a,b,c){setTimeout(function(){d()},0),c||(c={}),this.options=c,this.mesh=a,this.handPoints=b,this.states={},this.intersectionPoints={},this.possibleIntersectionPoints={},this.distances={},this.lengths={}};return e.prototype={intersectionCount:function(){var a,b=0;for(a in this.intersectionPoints)this.intersectionPoints.hasOwnProperty(a)&&b++;return b},"in":function(a){return this.on("in",a),this},out:function(a){return this.on("out",a),this},check:function(a){var b=this.handPoints(a);b[0]instanceof Array?this.checkLines(a,b):this.checkPoints(a,b)},checkLines:function(a,b){for(var d,e,f,g=this.mesh,h=(new THREE.Vector3).setFromMatrixPosition(this.mesh.matrixWorld),i=0;i<b.length;i++){f=a.id+"-"+i,e=g.intersectedByLine(b[i][0],b[i][1],h);var j=this.possibleIntersectionPoints[f];if("out"===this.states[f]&&e&&j){for(var k=g.getWorldCorners(),l=1/0,m=null,n=0;4>n;n++){var o=c(k[n],k[(n+1)%4],j,e);if(o){var p=(new THREE.Vector3).subVectors(o,j).lengthSq();l>p&&(l=p,m=o)}}m&&(e=m)}!e&&this.intersectionPoints[f]&&g.intersectionPoint&&(e=g.intersectionPoint),e?this.intersectionPoints[f]=e:this.intersectionPoints[f]&&delete this.intersectionPoints[f],g.intersectionPoint?this.possibleIntersectionPoints[f]=g.intersectionPoint:delete this.possibleIntersectionPoints[f],d=e?"in":"out",("in"==d&&"in"!==this.states[f]||"out"==d&&"in"===this.states[f])&&(this.emit(d,a,e,f,i),this.states[f]=d)}},checkPoints:function(a,c){var d,e,f,g,h=this.mesh,i=new THREE.Vector3,j=new THREE.Vector3;if(!(h.geometry instanceof THREE.SphereGeometry))return void console.error("Unsupported geometry",this.mesh.geometry);i.setFromMatrixPosition(h.matrixWorld);for(var k=0;k<c.length;k++)g=a.id+"-"+k,f=b(c[k]),j.subVectors(f,i),d=j.length(),this.distances[g]=j,this.lengths[g]=d,e=d<h.geometry.parameters.radius?"in":"out",e!==this.states[g]&&(this.emit(e,a,j,g,k),this.states[g]=e)},clear:function(a){for(var b in this.states)this.states.hasOwnProperty(b)&&(delete this.states[b],delete this.intersectionPoints[b],delete this.lengths[b],delete this.distances[b],this.emit("out",a,null,b,parseInt(b.split("-")[1],10)))}},Leap._.extend(e.prototype,Leap.EventEmitter.prototype),this.watch=function(b,c){console.assert(b),console.assert(c),console.assert("function"==typeof c);var d=new e(b,c);return a.push(d),d},this.on("handLost",function(b){for(var c=0;c<a.length;c++)a[c].clear(b)}),{frame:function(b){for(var c=0;c<b.hands.length;c++)for(var d=0;d<a.length;d++)a[d].check(b.hands[c])}}}),function(){"use strict";THREE.BoxGeometry.prototype.corners=function(){this._corners||(this._corners=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]);var a=this.parameters.width/2,b=this.parameters.height/2,c=this.parameters.depth/2;return this._corners[0].set(-a,+b,+c),this._corners[1].set(+a,+b,+c),this._corners[2].set(+a,-b,+c),this._corners[3].set(-a,-b,+c),this._corners[4].set(-a,+b,-c),this._corners[5].set(+a,+b,-c),this._corners[6].set(+a,-b,-c),this._corners[7].set(-a,-b,-c),this._corners},THREE.PlaneGeometry.prototype.corners=function(a){this._corners||(this._corners=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2]);var b=this.parameters.width/2,c=this.parameters.height/2;return this._corners[0].set(-b,+c),this._corners[1].set(+b,+c),this._corners[2].set(+b,-c),this._corners[3].set(-b,-c),isNaN(a)?this._corners:this._corners[a]},THREE.Mesh.prototype.setCorner=function(a,b,c){if(c){var d=this.position,e=b,f=this.corners(a),g=this.scale.x;e=f.clone().add(this.position);var h=d.clone().sub(f.clone().multiplyScalar(g)),i=-(h.dot(h)-e.dot(e)+2*e.clone().sub(h).dot(d))/(2*e.clone().sub(h).dot(f)),j=d.clone().add(f.clone().multiplyScalar(i)),k=h.clone().sub(d).length();console.log(d,j),console.log(g,k),this.position.copy(j),this.scale.set(k,k,k)}else{if(!(this.geometry instanceof THREE.PlaneGeometry))throw"Non planar geometries not currently supported";var f=this.geometry.corners(a);f=new THREE.Vector3(f.x,f.y,.1),this.scale.copy(b.clone().sub(this.position).divide(f).add(this.scale).divideScalar(2)),this.position.copy(b.clone().sub(this.scale.clone().multiply(f)))}},THREE.Mesh.prototype.getWorldCorners=function(a){if(isNaN(a)){for(var b=this.geometry.corners(),c=0;c<b.length;c++)b[c]=new THREE.Vector3(b[c].x,b[c].y,0).applyMatrix4(this.matrixWorld);return b}return this.corners()[a]}}.call(this),THREE.PlaneGeometry.prototype.area=function(){return this.parameters.height*this.parameters.width},THREE.CircleGeometry.prototype.area=function(){return Math.pow(this.parameters.radius,2)*Math.PI},THREE.Mesh.prototype.border=function(a){var b=new THREE.Geometry;b.vertices.push(this.geometry.corners()[0],this.geometry.corners()[1],this.geometry.corners()[2],this.geometry.corners()[3],this.geometry.corners()[0],this.geometry.corners()[4],this.geometry.corners()[5],this.geometry.corners()[6],this.geometry.corners()[7],this.geometry.corners()[4]),this.add(new THREE.Line(b,a)),b=new THREE.Geometry,b.vertices.push(this.geometry.corners()[1],this.geometry.corners()[5]),this.add(new THREE.Line(b,a)),b=new THREE.Geometry,b.vertices.push(this.geometry.corners()[2],this.geometry.corners()[6]),this.add(new THREE.Line(b,a)),b=new THREE.Geometry,b.vertices.push(this.geometry.corners()[3],this.geometry.corners()[7]),this.add(new THREE.Line(b,a))},THREE.Mesh.prototype.intersectedByLine=function(a,b,c){this.lastIntersectionPoint||(this.lastIntersectionPoint=new THREE.Vector3),this.lastIntersectionPoint=this.intersectionPoint;var d=c||this.position,e=a,f=this.getWorldDirection(),g=b.clone().sub(a),h=d.clone().sub(e).dot(f),i=g.dot(f);if(0===h)return this.intersectionPoint=null,!1;if(0===i)return this.intersectionPoint=null,!1;var j=g.clone().multiplyScalar(h/i).add(e),k=b.clone().sub(a).dot(j.clone().sub(a));if(0>k)return this.intersectionPoint=null,!1;var l=b.clone().sub(a).lengthSq();return k>l?(this.intersectionPoint=null,!1):(this.intersectionPoint=j,this.pointOverlap(j.clone())?j:!1)},THREE.Mesh.prototype.pointOverlap=function(a,b){return b||(b=(new THREE.Matrix4).getInverse(this.matrixWorld)),this.geometry.pointOverlap(a.applyMatrix4(b))},THREE.PlaneGeometry.prototype.pointOverlap=function(a){var b=this.corners();return b[3].y<a.y&&a.y<b[0].y&&b[3].x<a.x&&a.x<b[2].x?a:void 0},THREE.CircleGeometry.prototype.pointOverlap=function(a){return this.parameters.radius>a.length()?a:void 0};